<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>BUF1024</title>
    <link>https://luoguochun.cn/</link>
    <description>Recent content on BUF1024</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sat, 01 Sep 2018 19:54:09 +0000</lastBuildDate>
    
	<atom:link href="https://luoguochun.cn/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>高可用系统</title>
      <link>https://luoguochun.cn/post/2018-09-01-high-available-loadbalance/</link>
      <pubDate>Sat, 01 Sep 2018 19:54:09 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2018-09-01-high-available-loadbalance/</guid>
      <description>很久之前，在公司鼎盛的时期，还存在运维人员的时候，我们开发应用的时候，就会和运维人员讨论一下部署的方案，听的比较多的是，运维人员说的比较多的</description>
    </item>
    
    <item>
      <title>react-native 实践部分</title>
      <link>https://luoguochun.cn/post/2018-05-25-react-native-practice/</link>
      <pubDate>Fri, 25 May 2018 17:04:10 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2018-05-25-react-native-practice/</guid>
      <description>这两月，零零散散的折腾react-native, 使用react-native将公司的h5微盘前端转化为原生的app。从零开始搭框架到app主</description>
    </item>
    
    <item>
      <title>react-native 开发环境配置 -- 调试部分</title>
      <link>https://luoguochun.cn/post/2018-04-14-react-native-dev-env/</link>
      <pubDate>Sat, 14 Apr 2018 13:44:08 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2018-04-14-react-native-dev-env/</guid>
      <description>在学习一们新的语言或编程技术的时候，我总偏向于弄清楚它的调试工具和技巧。因为我总觉得我写的程序有大大的bug，而打印日志这种最原始的调试方式</description>
    </item>
    
    <item>
      <title>ReactJS  --  试水篇</title>
      <link>https://luoguochun.cn/post/2018-01-25-reactjs-try/</link>
      <pubDate>Thu, 25 Jan 2018 09:32:32 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2018-01-25-reactjs-try/</guid>
      <description>简介 在大前端里，有三个特别流行的MVVM（参考：MVC，MVP 和 MVVM 的图示）框架，AngularJS，ReactJS和Vue。在MVVM之前，</description>
    </item>
    
    <item>
      <title>软件构架  --  无技术简篇</title>
      <link>https://luoguochun.cn/post/2017-12-26-soft-architecture/</link>
      <pubDate>Wed, 06 Dec 2017 11:08:13 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2017-12-26-soft-architecture/</guid>
      <description>软件构架 所谓的软件构架，是有关软件整体结构与各组件的抽象描述，用于指导大型软件系统各个方面的设计。一个好的软件构架，会随着业务的不断深入发展</description>
    </item>
    
    <item>
      <title>golang 私钥&#34;加密&#34;公钥&#34;解密&#34;</title>
      <link>https://luoguochun.cn/post/2017-06-23-golang-private-public-crypt/</link>
      <pubDate>Fri, 23 Jun 2017 20:57:11 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2017-06-23-golang-private-public-crypt/</guid>
      <description>之前工作主要使用C/C++与银行/第三方支付对接，但C/C++无法满足客户”当天给协议明天实盘上载“的开发速度以及现公司一些特殊情况，所以决</description>
    </item>
    
    <item>
      <title>线程同步与原子变量</title>
      <link>https://luoguochun.cn/post/2017-06-03-synchronize-atomic-variable/</link>
      <pubDate>Sat, 03 Jun 2017 11:19:25 +0800</pubDate>
      
      <guid>https://luoguochun.cn/post/2017-06-03-synchronize-atomic-variable/</guid>
      <description>无论是基于多线程还是多进程并发的程序，同步控制总是不可避免的。按照自己的思维和使用习惯，自然会想到的是互斥量(mutext)和自旋锁(spi</description>
    </item>
    
    <item>
      <title>lwan http 服务器</title>
      <link>https://luoguochun.cn/post/2017-04-28-lwan-http-server/</link>
      <pubDate>Fri, 28 Apr 2017 22:10:32 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2017-04-28-lwan-http-server/</guid>
      <description>简介 服务器端程序的设计模式一般比较固定，目前主要有两种主要的解决方式，一种多进程方式(进程池)，另外一种多线程的方式(线程池)(P.S:请忘</description>
    </item>
    
    <item>
      <title>微信web通信协议</title>
      <link>https://luoguochun.cn/post/2017-04-20-weixin-web-proto/</link>
      <pubDate>Thu, 20 Apr 2017 21:12:03 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2017-04-20-weixin-web-proto/</guid>
      <description>微信有网页版，网页版的微信具备手机微信大部分功能。理论上，放在web页面上的所有东西，都是可以被破解的。对于web微信协议的破解，一些没有接</description>
    </item>
    
    <item>
      <title>js快速参考</title>
      <link>https://luoguochun.cn/post/2016-12-29-head-first-js/</link>
      <pubDate>Thu, 29 Dec 2016 17:08:46 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2016-12-29-head-first-js/</guid>
      <description>P.S.: 因为极少用，所以js一直都忘记，所以，现在记录一下, 适合于曾以为入门js却又少使用的参考…… js 运行于宿主环境，常见宿主环境有web浏览器和</description>
    </item>
    
    <item>
      <title>ssl/tls 握手</title>
      <link>https://luoguochun.cn/post/2016-11-16-https-handshake/</link>
      <pubDate>Wed, 16 Nov 2016 11:17:11 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2016-11-16-https-handshake/</guid>
      <description>http协议是互联网的基石，然而http却是基于文本的协议，在网络传输中容易被窃听，冒充和篡改。如果对安全性要求相对高，那么一般使用http</description>
    </item>
    
    <item>
      <title>git 版本控制</title>
      <link>https://luoguochun.cn/post/2016-10-10-git-toilet-book/</link>
      <pubDate>Mon, 10 Oct 2016 14:46:23 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2016-10-10-git-toilet-book/</guid>
      <description>简介 git，是目前最流行的版本控制系统，没有之一。git作为分布式版本控制系统，与其他集中式版本控制系统(如svn)的一个重要区别是，git</description>
    </item>
    
    <item>
      <title>tcp 协议小结</title>
      <link>https://luoguochun.cn/post/2016-09-23-tcp-fuck/</link>
      <pubDate>Fri, 23 Sep 2016 21:20:10 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2016-09-23-tcp-fuck/</guid>
      <description>tcp协议是一个比较复杂的协议，对tcp协议深入理解的，真的非常少非常少；对tcp协议误理解或理解片面的，真的非常多非常多。当然这也包括自己</description>
    </item>
    
    <item>
      <title>AT&amp;T Stype GAS Assembly</title>
      <link>https://luoguochun.cn/post/2016-02-02-at-t-stype-gas-assembly/</link>
      <pubDate>Tue, 02 Feb 2016 14:13:05 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2016-02-02-at-t-stype-gas-assembly/</guid>
      <description>简单回顾了下IA-32汇编语言，大学教科书学的8086是基于Intel语法的，使用的是nasm，这次整理了一下AT&amp;amp;T格式的，使用的</description>
    </item>
    
    <item>
      <title>minix 3</title>
      <link>https://luoguochun.cn/post/2016-01-18-minix-3/</link>
      <pubDate>Mon, 18 Jan 2016 11:12:36 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2016-01-18-minix-3/</guid>
      <description>linux非常庞大，虽然有很多参考的资料，但是啃这样庞大的东西还是很费力，如果是业余啃，那难度或许更大。然而，我们可以绕道看下另外一个小巧，</description>
    </item>
    
    <item>
      <title>ycm 选项</title>
      <link>https://luoguochun.cn/post/2015-10-17-ycm-opt/</link>
      <pubDate>Sat, 17 Oct 2015 22:11:41 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2015-10-17-ycm-opt/</guid>
      <description>YouCompleteMe, vim/neovim 语义补全利器，按照参见YouCompleteMe github网页。下面看看简单选项和命令，不保证解释准确，只做粗略参考。 命令 &amp;quot;</description>
    </item>
    
    <item>
      <title>tcpdump usage</title>
      <link>https://luoguochun.cn/post/2015-07-25-tcpdump-usage/</link>
      <pubDate>Sat, 25 Jul 2015 14:26:04 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2015-07-25-tcpdump-usage/</guid>
      <description>Tcpdump使用方法 （1）第一种是关于类型的关键字主要包括host，net，port 例如： host 210.27.48.2，指明 210.27.48</description>
    </item>
    
    <item>
      <title>VIM XX THINGS</title>
      <link>https://luoguochun.cn/post/2015-07-22-vim-xx-things/</link>
      <pubDate>Wed, 22 Jul 2015 15:25:00 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2015-07-22-vim-xx-things/</guid>
      <description>关于中文乱码 跟字符编码方式有关的选项: encoding, fileencoding, fileencodings, *termencoding*。更详细的信息可看vim 帮助文档: :help encoding-names。简</description>
    </item>
    
    <item>
      <title>sqlalchemy orm 概览</title>
      <link>https://luoguochun.cn/post/2014-12-28-sqlalchemy-orm-overview/</link>
      <pubDate>Sun, 28 Dec 2014 21:08:34 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2014-12-28-sqlalchemy-orm-overview/</guid>
      <description>SQLAlchemy 概述 在python的orm世界里，SQLAlchemy,无疑是数据库工具链里面的一个重量级的工具。SQLAlchemy简略构架图如下: 如图</description>
    </item>
    
    <item>
      <title>tcp_nodelay选项</title>
      <link>https://luoguochun.cn/post/2014-10-22-tcp_nodelay/</link>
      <pubDate>Wed, 22 Oct 2014 17:01:08 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2014-10-22-tcp_nodelay/</guid>
      <description>今天遇到了TCP_NODELAY的问题，简单记录一下。具体的表现是，客户端进行清算查询时，老是超时。这个问题出现很久了，运维一直都有反映查询</description>
    </item>
    
    <item>
      <title>jquery selector小结</title>
      <link>https://luoguochun.cn/post/2014-10-07-jquery-summary/</link>
      <pubDate>Tue, 07 Oct 2014 21:36:56 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2014-10-07-jquery-summary/</guid>
      <description>jQuery 概述 现代网站基本上都离不开jQuery。它是轻量级的js库，兼容css3，还有各种浏览器。文档齐全而详细，还有众多而成熟的插件可用。jQu</description>
    </item>
    
    <item>
      <title>bt种子文件文件结构</title>
      <link>https://luoguochun.cn/post/2014-09-17-bt-file-structure/</link>
      <pubDate>Wed, 17 Sep 2014 19:12:17 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2014-09-17-bt-file-structure/</guid>
      <description>估计80%以上接触互联网的人都知道bt是什么东西，任何一个用bt下载的人都知道这样一个概念，种子。bt种子就是记录了p2p对等网络中trac</description>
    </item>
    
    <item>
      <title>验证码识别</title>
      <link>https://luoguochun.cn/post/2014-08-29-verification-code-identified/</link>
      <pubDate>Fri, 29 Aug 2014 22:31:35 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2014-08-29-verification-code-identified/</guid>
      <description>本文所使用的验证码识别的方法非常暴力，高手可忽略。对于在客户端实现的“伪验证码”或使用静态图片的验证码，本文不作讨论。对于验证码的识别，一直</description>
    </item>
    
    <item>
      <title>coroutine协程</title>
      <link>https://luoguochun.cn/post/2014-08-21-coroutine/</link>
      <pubDate>Thu, 21 Aug 2014 16:46:46 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2014-08-21-coroutine/</guid>
      <description>如果你接触过lua这种小巧的脚本语言，你就会经常接触到一个叫做协程的神奇概念。大多数脚本语言都有对协程不同程度的支持。但是大多编译语言，如C</description>
    </item>
    
    <item>
      <title>linux /proc 伪文件系统</title>
      <link>https://luoguochun.cn/post/2014-07-28-process-information-pseduo-file-system/</link>
      <pubDate>Mon, 28 Jul 2014 14:57:18 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2014-07-28-process-information-pseduo-file-system/</guid>
      <description>linux /proc伪文件系统是内核数据结构的接口，是异常强大的，大部分的文件都是只读的。本文主要是根据man proc来补充说明(未完待续)。 /proc/[pid] 每一</description>
    </item>
    
    <item>
      <title>wireshark tcp 协议分析</title>
      <link>https://luoguochun.cn/post/2014-07-23-wireshark-tcp/</link>
      <pubDate>Wed, 23 Jul 2014 15:28:16 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2014-07-23-wireshark-tcp/</guid>
      <description>注：本文比较简略，且存在错漏。更详细的总结参考tcp协议小结，后续如若发现有错漏，则同时在tcp协议小结中进行修正，本文不再做维护。 &amp;ndash;2016-09-23 虽然知</description>
    </item>
    
    <item>
      <title>杂乱记忆</title>
      <link>https://luoguochun.cn/post/2014-07-15-misc-memory/</link>
      <pubDate>Tue, 15 Jul 2014 11:10:13 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2014-07-15-misc-memory/</guid>
      <description>这里记录的是一些常见的错误或技巧或一些注意事项等，不定时更新: hexo 安装（含插件） hexo 是相对比较好的一个静态BLOG生成器，虽然我在树莓派上面编译</description>
    </item>
    
    <item>
      <title>隐藏make编译的编译输出</title>
      <link>https://luoguochun.cn/post/2014-07-04-hide-compile-output/</link>
      <pubDate>Fri, 04 Jul 2014 16:45:00 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2014-07-04-hide-compile-output/</guid>
      <description>编译程序make时，会看到很多编译输出。对于开发来说，这是非常直观的，但是如果分发到客户（需要编译）或者只需要关注错误时，这种输出就感觉烦人</description>
    </item>
    
    <item>
      <title>设置进程的名称</title>
      <link>https://luoguochun.cn/post/2014-07-04-set-proccess-title/</link>
      <pubDate>Fri, 04 Jul 2014 10:27:47 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2014-07-04-set-proccess-title/</guid>
      <description>###如何开搞 我们平时ps进程时，显示的进程标题是我们输入的程序名以及一些参数。这种显示方式并非非常直观，我们需要一种方式可以设置程序的标题</description>
    </item>
    
    <item>
      <title>端的起源</title>
      <link>https://luoguochun.cn/post/2014-06-30-endian/</link>
      <pubDate>Mon, 30 Jun 2014 17:08:14 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2014-06-30-endian/</guid>
      <description>一下摘自《深入理解计算机系统》第二版： “端”(endian)的起源： &amp;gt;以下是Jonathan Swift 在1726 年关于大小端之争历史的描述： &amp;</description>
    </item>
    
    <item>
      <title>浮动数与0比较</title>
      <link>https://luoguochun.cn/post/2014-06-28-infinite/</link>
      <pubDate>Sat, 28 Jun 2014 21:40:50 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2014-06-28-infinite/</guid>
      <description>###无限大小 C语言如何表示无限大小，NAN？redis里面这么搞的： static double R_Zero, R_PosInf, R_NegInf, R_Nan; /* Double constants initialization */ R_Zero = 0.0; R_PosInf = 1.0/R_Zero; R_NegInf = -1.0/R_Zero; R_Nan = R_Zero/R_Zero; 简单测试： #include &amp;lt;stdio.h&amp;gt; int main() { static double</description>
    </item>
    
    <item>
      <title>服务器模式</title>
      <link>https://luoguochun.cn/post/2014-06-25-server-mode/</link>
      <pubDate>Wed, 25 Jun 2014 20:49:24 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2014-06-25-server-mode/</guid>
      <description>服务器开发貌似有固定的模式，性能和复杂度各异，现总结下常见的模式。当然服务器的开发并没有固定的模式，除了以下总结的外，实际根据业务的不同，生</description>
    </item>
    
    <item>
      <title>c构造函数</title>
      <link>https://luoguochun.cn/post/2014-06-25-c-constructor/</link>
      <pubDate>Wed, 25 Jun 2014 13:00:43 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2014-06-25-c-constructor/</guid>
      <description>构造函数 任何一们面向对象语言里都会涉及构造函数这一概念，只是实现的方式各有差异。需要这main函数之前执行一段代码是非常容易的事情，只需要声</description>
    </item>
    
    <item>
      <title>mschedule 简单linux进程管理（树莓派）</title>
      <link>https://luoguochun.cn/post/2014-05-30-myschd/</link>
      <pubDate>Fri, 30 May 2014 23:28:16 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2014-05-30-myschd/</guid>
      <description>树莓派是神奇的机器，CPU和内存都少的可怜，但体积小功耗低，在上面搞些动搞些西其实也挺有意思，挺好玩的。装的是pidara，基本服务没有精简</description>
    </item>
    
    <item>
      <title>django &#43; nginx &#43; raspberypi &#43; pidaro</title>
      <link>https://luoguochun.cn/post/2014-05-12-django-nginx-raspberypi-pidora/</link>
      <pubDate>Mon, 12 May 2014 22:12:47 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2014-05-12-django-nginx-raspberypi-pidora/</guid>
      <description>对于一个从事后台开发的人来说，搞了个网站，我自己都觉得有点意外。不是很懂html，不是很懂css，不是很懂js，不是很懂web开发模式/框架</description>
    </item>
    
    <item>
      <title>C 简单单元测试框架</title>
      <link>https://luoguochun.cn/post/2014-01-11-ctest/</link>
      <pubDate>Sat, 11 Jan 2014 23:48:14 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2014-01-11-ctest/</guid>
      <description>大约2年前，仿照GTEST写了个简单的C++单元测试框架。 https://luoguochun.cn/2012/02/09/simple-c++-test-framework/ 后来用C写后台程序比较多了，C++那个框架却不怎么好用了，于是又写了个C的。 功能</description>
    </item>
    
    <item>
      <title>gcov 简述</title>
      <link>https://luoguochun.cn/post/2013-05-31-linux-gcov/</link>
      <pubDate>Fri, 31 May 2013 17:08:14 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2013-05-31-linux-gcov/</guid>
      <description>代码覆盖率是单元测试的一个指标，通常覆盖率越高，单元测试就做得更完备。（然而，覆盖率是不是和软件质量成正比关系呢？）gcov是GNU工具链中</description>
    </item>
    
    <item>
      <title>Linux pkg-config</title>
      <link>https://luoguochun.cn/post/2013-05-29-linux-pkg-config/</link>
      <pubDate>Wed, 29 May 2013 22:37:14 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2013-05-29-linux-pkg-config/</guid>
      <description>pkg-config主要的作用是提供编译和连接到软件库的信息的。 如，典型的用法： [heidong@HEIDONGVM bin]$ pkg-config --cflags --libs libevent -I/usr/local/include -L/usr/local/lib -levent 将显示包含头文件和连接的信息。 那么pkg-</description>
    </item>
    
    <item>
      <title>Linux -- rpm</title>
      <link>https://luoguochun.cn/post/2012-09-18-linux-rpm/</link>
      <pubDate>Tue, 18 Sep 2012 23:48:14 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2012-09-18-linux-rpm/</guid>
      <description>rpm是redhat（系列）系统软件安装，管理的工具。相对于针对仓库而言的yum，rpm是针对单个软件包的。通常情况下Linux发布软件是通</description>
    </item>
    
    <item>
      <title>Windows Shell Extension</title>
      <link>https://luoguochun.cn/post/2012-06-24-windows-shell-extension/</link>
      <pubDate>Sun, 24 Jun 2012 00:00:43 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2012-06-24-windows-shell-extension/</guid>
      <description>分享1，2年前自己还在搞WINDOWS开发时写的一个小工具（当时在公司无聊的时候写了很多小工具啊，只不过拿不出源代码，杯具），个人觉得挺实用</description>
    </item>
    
    <item>
      <title>基于libevent进程池服务器</title>
      <link>https://luoguochun.cn/post/2012-06-23-proccess-pool-server/</link>
      <pubDate>Sat, 23 Jun 2012 11:08:14 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2012-06-23-proccess-pool-server/</guid>
      <description>本程序仅是为了学习libevent而写的，但可以当作是简单的程序框架扩展为实际的应用。程序本身没有经过广泛的功能测试和压力测试，仅作简单的功</description>
    </item>
    
    <item>
      <title>sys/queue.h</title>
      <link>https://luoguochun.cn/post/2012-05-02-sys-queue-h/</link>
      <pubDate>Wed, 02 May 2012 21:08:14 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2012-05-02-sys-queue-h/</guid>
      <description>概述 sys/queue.h是LINUX/UNIX系统下面的一个标准头文件，用一系列的数据结构定义了一队列。包括singly-lined list, list, simple</description>
    </item>
    
    <item>
      <title>Very Very Simple C&#43;&#43; Testing Framework</title>
      <link>https://luoguochun.cn/post/2012-02-09-simple-c&#43;&#43;-test-framework/</link>
      <pubDate>Thu, 09 Feb 2012 20:50:00 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2012-02-09-simple-c&#43;&#43;-test-framework/</guid>
      <description>简介 测试驱动开发(TDD)是敏捷开发的一种方法，TDD的一个重要的工具就是单元测试(Unit Test)。如果想详细了解什么是TDD和单元测试</description>
    </item>
    
    <item>
      <title>gtest 小结</title>
      <link>https://luoguochun.cn/post/2011-12-05-gtest-summary/</link>
      <pubDate>Mon, 05 Dec 2011 12:00:00 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2011-12-05-gtest-summary/</guid>
      <description>GTEST 是简单而且又非常实用的测试框架。下面关于GTEST的一些简单总结。 编译 在GNU系统下： g++ -I${GTEST_DIR}/include -I${GTEST_DIR} -c ${GTEST_DIR}/src/gtest-all.cc ar -rv libgtest.a gtest-all.o 在WINDOWS下： GTEST在M</description>
    </item>
    
    <item>
      <title>关于</title>
      <link>https://luoguochun.cn/about/</link>
      <pubDate>Sun, 04 Jun 1989 20:00:00 +0000</pubDate>
      
      <guid>https://luoguochun.cn/about/</guid>
      <description>那是一个个无日无夜的日子。 满怀激情一群群的人， 不时响起的“!兄弟们辛苦”， 还有那释怀的笑。 那些日子，那些人，剩下缅怀。 TldFMlJEVk1hVTQxY0dsMk5XRTJNamMzZVUwMVRIVlhOVXhwUVRWWmFVRTNOM2xOTlhFcmNqVk1hVTQxTkhFMU5reEhjamMzZVVJSwo= 邮箱： NDUwMTcxMDk0QHFxLmNvbQ== 站点： aHR0cDovL2x1b2d1b2NodW4uY24=</description>
    </item>
    
  </channel>
</rss>
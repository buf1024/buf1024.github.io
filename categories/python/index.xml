<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on BUF1024</title>
    <link>https://luoguochun.cn/categories/python/</link>
    <description>Recent content in python on BUF1024</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 03 Feb 2021 19:10:00 +0800</lastBuildDate><atom:link href="https://luoguochun.cn/categories/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>flask极简简介</title>
      <link>https://luoguochun.cn/post/2021-02-03-flask-intro/</link>
      <pubDate>Wed, 03 Feb 2021 19:10:00 +0800</pubDate>
      
      <guid>https://luoguochun.cn/post/2021-02-03-flask-intro/</guid>
      <description>
        
          
            todo: flask环境变量 &amp;ndash; FLASK_ENV, FLASK_DEBUG flask可以支持热更新式的开发，PyCharm的设置方式是在Run Configuration上面勾上DEBUG选
          
          
        
      </description>
    </item>
    
    <item>
      <title>fabric极简简介</title>
      <link>https://luoguochun.cn/post/2021-01-15-fabric-intro/</link>
      <pubDate>Fri, 15 Jan 2021 19:12:00 +0800</pubDate>
      
      <guid>https://luoguochun.cn/post/2021-01-15-fabric-intro/</guid>
      <description>
        
          
            fabric主要用于自动化运维，可以使用类似于make命令一样执行python的函数。 fabric主要依赖于pyinvoke和paramik
          
          
        
      </description>
    </item>
    
    <item>
      <title>python 使用到的一丢丢代码片段</title>
      <link>https://luoguochun.cn/post/2021-01-01-py-gist/</link>
      <pubDate>Fri, 01 Jan 2021 11:12:08 +0800</pubDate>
      
      <guid>https://luoguochun.cn/post/2021-01-01-py-gist/</guid>
      <description>
        
          
            python 装饰器终极写法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 # 假如需要用到装饰的功能（建议经常使用），那么建议使用下面写法 # 目的
          
          
        
      </description>
    </item>
    
    <item>
      <title>验证码识别</title>
      <link>https://luoguochun.cn/post/2014-08-29-verification-code-identified/</link>
      <pubDate>Fri, 29 Aug 2014 22:31:35 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2014-08-29-verification-code-identified/</guid>
      <description>
        
          
            本文所使用的验证码识别的方法非常暴力，高手可忽略。对于在客户端实现的“伪验证码”或使用静态图片的验证码，本文不作讨论。对于验证码的识别，一直
          
          
        
      </description>
    </item>
    
  </channel>
</rss>

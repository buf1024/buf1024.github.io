<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TCP on BUF1024</title>
    <link>https://luoguochun.cn/tags/tcp/</link>
    <description>Recent content in TCP on BUF1024</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 02 Mar 2023 14:10:12 +0800</lastBuildDate><atom:link href="https://luoguochun.cn/tags/tcp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TCP未建立之前，丢失的SYN报文会不会重传？</title>
      <link>https://luoguochun.cn/post/2023-03-02-tcp-setup/</link>
      <pubDate>Thu, 02 Mar 2023 14:10:12 +0800</pubDate>
      
      <guid>https://luoguochun.cn/post/2023-03-02-tcp-setup/</guid>
      <description>
        
          
            记得以前，有人问TCP问题的时候，也出现过一次像这样的争论。争论的问题是，TCP四次挥手为什么要四次，三次为什么不可以。我的答案是可以的，只
          
          
        
      </description>
    </item>
    
    <item>
      <title>TCP温故而知新</title>
      <link>https://luoguochun.cn/post/2023-02-14-tcp-renew/</link>
      <pubDate>Thu, 02 Feb 2023 14:15:12 +0800</pubDate>
      
      <guid>https://luoguochun.cn/post/2023-02-14-tcp-renew/</guid>
      <description>
        
          
            TCP是什么 TCP是面向连接的，可靠的，基于字节流的传输协议。 面向连接，指的是一对一的，不是一对多。 可靠性，指的是不管网络环境多么的复杂多变
          
          
        
      </description>
    </item>
    
    <item>
      <title>tcp 协议小结</title>
      <link>https://luoguochun.cn/post/2016-09-23-tcp-fuck/</link>
      <pubDate>Fri, 23 Sep 2016 21:20:10 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2016-09-23-tcp-fuck/</guid>
      <description>
        
          
            tcp协议是一个比较复杂的协议，对tcp协议深入理解的，真的非常少非常少；对tcp协议误理解或理解片面的，真的非常多非常多。当然这也包括自己
          
          
        
      </description>
    </item>
    
    <item>
      <title>tcpdump usage</title>
      <link>https://luoguochun.cn/post/2015-07-25-tcpdump-usage/</link>
      <pubDate>Sat, 25 Jul 2015 14:26:04 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2015-07-25-tcpdump-usage/</guid>
      <description>
        
          
            Tcpdump使用方法 （1）第一种是关于类型的关键字主要包括host，net，port 例如： host 210.27.48.2，指明 210.27.48
          
          
        
      </description>
    </item>
    
    <item>
      <title>tcp_nodelay选项</title>
      <link>https://luoguochun.cn/post/2014-10-22-tcp_nodelay/</link>
      <pubDate>Wed, 22 Oct 2014 17:01:08 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2014-10-22-tcp_nodelay/</guid>
      <description>
        
          
            今天遇到了TCP_NODELAY的问题，简单记录一下。具体的表现是，客户端进行清算查询时，老是超时。这个问题出现很久了，运维一直都有反映查询
          
          
        
      </description>
    </item>
    
    <item>
      <title>wireshark tcp 协议分析</title>
      <link>https://luoguochun.cn/post/2014-07-23-wireshark-tcp/</link>
      <pubDate>Wed, 23 Jul 2014 15:28:16 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2014-07-23-wireshark-tcp/</guid>
      <description>
        
          
            注：本文比较简略，且存在错漏。更详细的总结参考tcp协议小结，后续如若发现有错漏，则同时在tcp协议小结中进行修正，本文不再做维护。 &amp;ndash;2016-09-23 虽然知
          
          
        
      </description>
    </item>
    
    <item>
      <title>基于libevent进程池服务器</title>
      <link>https://luoguochun.cn/post/2012-06-23-proccess-pool-server/</link>
      <pubDate>Sat, 23 Jun 2012 11:08:14 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2012-06-23-proccess-pool-server/</guid>
      <description>
        
          
            本程序仅是为了学习libevent而写的，但可以当作是简单的程序框架扩展为实际的应用。程序本身没有经过广泛的功能测试和压力测试，仅作简单的功
          
          
        
      </description>
    </item>
    
  </channel>
</rss>

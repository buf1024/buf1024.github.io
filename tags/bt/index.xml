<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bt on BUF1024!!!</title>
    <link>https://luoguochun.cn/tags/bt/</link>
    <description>Recent content in bt on BUF1024!!!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 17 Sep 2014 19:12:17 +0000</lastBuildDate><atom:link href="https://luoguochun.cn/tags/bt/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>bt种子文件文件结构</title>
      <link>https://luoguochun.cn/post/2014-09-17-bt-file-structure/</link>
      <pubDate>Wed, 17 Sep 2014 19:12:17 +0000</pubDate>
      
      <guid>https://luoguochun.cn/post/2014-09-17-bt-file-structure/</guid>
      <description>&lt;p&gt;估计80%以上接触互联网的人都知道bt是什么东西，任何一个用bt下载的人都知道这样一个概念，种子。bt种子就是记录了p2p对等网络中tracker, nodes, files等信息，也就是说，这个种子告诉你，你要下载什么，到哪里下载。bt种子文件有自己的文件格式，下面简单看看bt种子文件的结构。&lt;br&gt;
在开始之前，我们先介绍bencode这种编码格式，因为bt种子文件，包括以后的DHT网络中，都是用这种编码的。网上有很多介绍，这里简单再重复一遍。bencode有4种数据类型:string, integer, list 和 dictionary。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;string&lt;br&gt;
字符是以这种方式编码的: &amp;lt;字符串长度&amp;gt;:&amp;lt;字符串&amp;gt;。&lt;br&gt;
如hell: 4:hell&lt;/li&gt;
&lt;li&gt;integer&lt;br&gt;
整数是一这种方式编码的: i&amp;lt;整数&amp;gt;e。&lt;br&gt;
如1999: i1999e&lt;/li&gt;
&lt;li&gt;list&lt;br&gt;
列表是一这种方式编码的: l[数据1][数据2][数据3][&amp;hellip;]e。&lt;br&gt;
如列表[hello, world, 101]： l5:hello5:worldi101ee&lt;/li&gt;
&lt;li&gt;dictionary&lt;br&gt;
字典是一这种方式编码的: d[key1][value1][key2][value2][&amp;hellip;]e，其中key必须是string而且按照字母顺序排序。&lt;br&gt;
如字典{aa:100, bb:bb, cc:200}： d2:aai100e2:bb2:bb2:cci200ee&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;很多语言都有bencode的实现，&lt;a href=&#34;http://python.org&#34;&gt;Python&lt;/a&gt;版本可在pypi里面找到: &lt;a href=&#34;https://pypi.python.org/pypi/bencode/1.0&#34;&gt;bencode&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;bt种子文件是使用bencode编码的，整个文件就dictionary，包含以下键。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;info, dictinary, 必选, 表示该bt种子文件的文件信息。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;文件信息包括文件的公共部分&lt;/p&gt;
&lt;p&gt;piece length, integer, 必选, 每一数据块的长度&lt;br&gt;
pieces, string, 必选, 所有数据块的SHA1校验值&lt;br&gt;
publisher, string, 可选, 发布者&lt;br&gt;
publisher.utf-8, string, 可选, 发布者的UTF-8编码&lt;br&gt;
publisher-url, string, 可选, 发布者的URL&lt;br&gt;
publisher-url.utf-8, string, 可选, 发布者的URL的UTF-8编码&lt;/p&gt;
&lt;p&gt;如果bt种子包含的是单个文件，包含以下内容&lt;/p&gt;
&lt;p&gt;name, string, 必选, 推荐的文件名称
name.utf-8, string, 可选, 推荐的文件名称的UTF-8编码&lt;br&gt;
length, int, 必选， 文件的长度单位是字节&lt;/p&gt;
&lt;p&gt;如果是多文件，则包含以下部分:&lt;/p&gt;
&lt;p&gt;name, string, 必选, 推荐的文件夹名称
name.utf-8, string, 可选, 推荐的文件名称的UTF-8编码&lt;br&gt;
files, list, 必选, 文件列表，每个文件列表下面是包括每一个文件的信息，文件信息是个字典。&lt;/p&gt;
&lt;p&gt;文件字典&lt;/p&gt;
&lt;p&gt;length, int, 必选， 文件的长度单位是字节&lt;br&gt;
path, string, 必选， 文件名称，包含文件夹在内 &lt;br&gt;
path.utf-8, string, 必选， 文件名称UTF-8表示，包含文件夹在内&lt;br&gt;
filehash，string, 可选， 文件hash。&lt;br&gt;
ed2k, string, 可选, ed2k信息。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;announce, string, 必选, tracker 服务器的地址&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;announce-list, list, 可选, 可选的tracker服务器地址&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;creation date， interger， 必选, 文件创建时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;comment， string, 可选, bt文件注释&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;created by， string， 可选， 文件创建者。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;上面列举的可能不是很完整的，但是大体上主要的字段没有重大的错误。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

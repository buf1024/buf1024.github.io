qstrategy.event
===============

.. py:module:: qstrategy.event


Attributes
----------

.. autoapisummary::

   qstrategy.event.MonitorEvent
   qstrategy.event.SelectHit
   qstrategy.event.SelectEvent
   qstrategy.event.Quot
   qstrategy.event.RtQuot


Classes
-------

.. autoapisummary::

   qstrategy.event.BrokerEvent
   qstrategy.event.Event
   qstrategy.event.QuotEvent


Module Contents
---------------

.. py:data:: MonitorEvent

   监控事件

.. py:data:: SelectHit

   选股命中信息

.. py:data:: SelectEvent

   选股事件

.. py:class:: BrokerEvent(*, event: str, data: Union[List[qstrategy.tradecomm.Signal], Tuple, List[qstrategy.tradecomm.Position]])

   q券商事件


   .. py:method:: to_dict() -> Optional[Dict]

      事件转换为字典形式



.. py:class:: Event(*, event: str, data: Union[qstrategy.tradecomm.Signal, List[str], qstrategy.tradecomm.Entrust, BrokerEvent, MonitorEvent, SelectEvent])

   事件


   .. py:property:: event
      :type: Optional[Dict]

      事件转为字典形式


   .. py:method:: to_dict() -> Optional[Dict]

      事件转为字典形式



.. py:data:: Quot

   单个标的行情

.. py:data:: RtQuot

   多个标的行情

.. py:class:: QuotEvent(event)

   .. py:attribute:: start
      :value: 'start'



   .. py:attribute:: morning_open
      :value: 'morning_open'



   .. py:attribute:: morning_close
      :value: 'morning_close'



   .. py:attribute:: noon_open
      :value: 'noon_open'



   .. py:attribute:: noon_close
      :value: 'noon_close'



   .. py:attribute:: end
      :value: 'end'



   .. py:attribute:: quot
      :value: 'quot'



   .. py:property:: event
      :type: str



   .. py:property:: data
      :type: Optional[RtQuot]




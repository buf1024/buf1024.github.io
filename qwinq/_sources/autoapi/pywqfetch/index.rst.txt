:py:mod:`pywqfetch`
===================

.. py:module:: pywqfetch


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   calc_chip/index.rst
   fetch/index.rst
   pywqfetch/index.rst


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   pywqfetch.BlockFetch
   pywqfetch.Fetch
   pywqfetch.BarFreq
   pywqfetch.Market
   pywqfetch.MarketType



Functions
~~~~~~~~~

.. autoapisummary::

   pywqfetch.to_std_code



Attributes
~~~~~~~~~~

.. autoapisummary::

   pywqfetch.rwq_fetch
   pywqfetch.fetch_trade_date
   pywqfetch.fetch_next_trade_date
   pywqfetch.fetch_prev_trade_date
   pywqfetch.fetch_is_trade_date
   pywqfetch.fetch_bond_info
   pywqfetch.fetch_bond_bar
   pywqfetch.fetch_fund_info
   pywqfetch.fetch_fund_net
   pywqfetch.fetch_fund_bar
   pywqfetch.fetch_index_info
   pywqfetch.fetch_index_bar
   pywqfetch.fetch_stock_info
   pywqfetch.fetch_stock_is_margin
   pywqfetch.fetch_stock_bar
   pywqfetch.fetch_stock_index
   pywqfetch.fetch_stock_industry
   pywqfetch.fetch_stock_industry_detail
   pywqfetch.fetch_stock_industry_daily
   pywqfetch.fetch_stock_concept
   pywqfetch.fetch_stock_concept_detail
   pywqfetch.fetch_stock_concept_daily
   pywqfetch.fetch_stock_yjbb
   pywqfetch.fetch_stock_margin
   pywqfetch.fetch_stock_hot_rank
   pywqfetch.fetch_rt_quot
   pywqfetch.rwq_block_fetch
   pywqfetch.block_fetch_trade_date
   pywqfetch.block_fetch_next_trade_date
   pywqfetch.block_fetch_prev_trade_date
   pywqfetch.block_fetch_is_trade_date
   pywqfetch.block_fetch_bond_info
   pywqfetch.block_fetch_bond_bar
   pywqfetch.block_fetch_fund_info
   pywqfetch.block_fetch_fund_net
   pywqfetch.block_fetch_fund_bar
   pywqfetch.block_fetch_index_info
   pywqfetch.block_fetch_index_bar
   pywqfetch.block_fetch_stock_info
   pywqfetch.block_fetch_stock_is_margin
   pywqfetch.block_fetch_stock_bar
   pywqfetch.block_fetch_stock_index
   pywqfetch.block_fetch_stock_industry
   pywqfetch.block_fetch_stock_industry_detail
   pywqfetch.block_fetch_stock_industry_daily
   pywqfetch.block_fetch_stock_concept
   pywqfetch.block_fetch_stock_concept_detail
   pywqfetch.block_fetch_stock_concept_daily
   pywqfetch.block_fetch_stock_yjbb
   pywqfetch.block_fetch_stock_margin
   pywqfetch.block_fetch_stock_hot_rank
   pywqfetch.block_fetch_rt_quot


.. py:class:: BlockFetch


   .. py:method:: fetch_trade_date(to_frame=True) -> Union[Set[int], pandas.DataFrame]
      :staticmethod:


   .. py:method:: fetch_next_trade_date(d: Union[datetime.date, datetime.datetime]) -> datetime.date
      :staticmethod:


   .. py:method:: fetch_prev_trade_date(d: Union[datetime.date, datetime.datetime]) -> datetime.date
      :staticmethod:


   .. py:method:: fetch_is_trade_date(d) -> bool
      :staticmethod:


   .. py:method:: fetch_rt_quot(*, code: List[str], to_frame=True) -> Union[Dict[str, Dict], pandas.DataFrame]
      :staticmethod:


   .. py:method:: fetch_bond_info(*, to_frame=True) -> Union[List[Dict], pandas.DataFrame]


   .. py:method:: fetch_bond_bar(*, code: str, name: str, stock_code: str, stock_name: str, freq: Optional[int] = None, start: Optional[datetime.date] = None, end: Optional[datetime.date] = None, skip_rt: bool = True, to_frame=True) -> Dict


   .. py:method:: fetch_fund_info(*, to_frame=True) -> Union[List[Dict], pandas.DataFrame]


   .. py:method:: fetch_fund_net(*, code: str, name: Optional[str] = None, start: Optional[datetime.date] = None, end: Optional[datetime.date] = None, to_frame=True) -> Union[List[Dict], pandas.DataFrame]


   .. py:method:: fetch_fund_bar(*, code: str, name: Optional[str] = None, freq: Optional[int] = None, start: Optional[datetime.date] = None, end: Optional[datetime.date] = None, skip_rt: bool = True, to_frame=True) -> Dict


   .. py:method:: fetch_index_info(*, to_frame=True) -> Union[List[Dict], pandas.DataFrame]


   .. py:method:: fetch_index_bar(code: str, name: Optional[str] = None, freq: Optional[int] = None, start: Optional[datetime.date] = None, end: Optional[datetime.date] = None, skip_rt: bool = True, to_frame=True) -> Union[Dict, pandas.DataFrame]


   .. py:method:: fetch_stock_info(*, market: int = None, to_frame=True) -> Union[List[Dict], pandas.DataFrame]


   .. py:method:: fetch_stock_is_margin(*, to_frame=True) -> Union[Set[str], pandas.DataFrame]


   .. py:method:: fetch_stock_bar(*, code: str, name: Optional[str] = None, freq: Optional[int] = None, start: Optional[datetime.date] = None, end: Optional[datetime.date] = None, skip_rt: bool = True, to_frame=True) -> Union[Dict, pandas.DataFrame]


   .. py:method:: fetch_stock_index(*, index_date=None, to_frame=True) -> Union[Dict[str, Dict], pandas.DataFrame]


   .. py:method:: fetch_stock_industry(*, to_frame=True) -> Union[List[Dict], pandas.DataFrame]


   .. py:method:: fetch_stock_industry_detail(*, code: Optional[str] = None, name: Optional[str] = None, to_frame=True) -> Union[List[Dict], pandas.DataFrame]


   .. py:method:: fetch_stock_industry_daily(code: str, name: Optional[str] = None, start: Optional[datetime.date] = None, end: Optional[datetime.date] = None, skip_rt: bool = True, to_frame=True) -> Union[Dict, pandas.DataFrame]


   .. py:method:: fetch_stock_concept(*, to_frame=True) -> Union[List[Dict], pandas.DataFrame]


   .. py:method:: fetch_stock_concept_detail(*, code: Optional[str] = None, name: Optional[str] = None, to_frame=True) -> Union[List[Dict], pandas.DataFrame]


   .. py:method:: fetch_stock_concept_daily(*, code: str, name: Optional[str] = None, start: Optional[datetime.date] = None, end: Optional[datetime.date] = None, skip_rt: bool = True, to_frame=True) -> Union[Dict, pandas.DataFrame]


   .. py:method:: fetch_stock_yjbb(*, year: int, season: int, to_frame=True) -> Union[List[Dict], pandas.DataFrame]


   .. py:method:: fetch_stock_margin(*, code: str, start: Optional[datetime.date] = None, end: Optional[datetime.date] = None, to_frame=True) -> Union[List[Dict], pandas.DataFrame]


   .. py:method:: fetch_stock_hot_rank(*, code: Union[str, list], to_frame=True) -> Union[Dict, pandas.DataFrame]



.. py:class:: Fetch


   .. py:method:: fetch_trade_date(to_frame=True) -> Union[Set[int], pandas.DataFrame]
      :staticmethod:
      :async:


   .. py:method:: fetch_next_trade_date(d: Union[datetime.date, datetime.datetime]) -> datetime.date
      :staticmethod:
      :async:


   .. py:method:: fetch_prev_trade_date(d: Union[datetime.date, datetime.datetime]) -> datetime.date
      :staticmethod:
      :async:


   .. py:method:: fetch_is_trade_date(d: Union[datetime.date, datetime.datetime]) -> bool
      :staticmethod:
      :async:


   .. py:method:: fetch_rt_quot(*, code: List[str], to_frame=True) -> Union[Dict[str, Dict], pandas.DataFrame]
      :staticmethod:
      :async:


   .. py:method:: fetch_bond_info(*, to_frame=True) -> Union[List[Dict], pandas.DataFrame]
      :async:


   .. py:method:: fetch_bond_bar(*, code: str, name: str, stock_code: str, stock_name: str, freq: Optional[int] = None, start: Optional[datetime.date] = None, end: Optional[datetime.date] = None, skip_rt: bool = True, to_frame=True) -> Dict
      :async:


   .. py:method:: fetch_fund_info(*, to_frame=True) -> Union[List[Dict], pandas.DataFrame]
      :async:


   .. py:method:: fetch_fund_net(*, code: str, name: Optional[str] = None, start: Optional[datetime.date] = None, end: Optional[datetime.date] = None, to_frame=True) -> Union[List[Dict], pandas.DataFrame]
      :async:


   .. py:method:: fetch_fund_bar(*, code: str, name: Optional[str] = None, freq: Optional[int] = None, start: Optional[datetime.date] = None, end: Optional[datetime.date] = None, skip_rt: bool = True, to_frame=True) -> Dict
      :async:


   .. py:method:: fetch_index_info(*, to_frame=True) -> Union[List[Dict], pandas.DataFrame]
      :async:


   .. py:method:: fetch_index_bar(*, code: str, name: Optional[str] = None, freq: Optional[int] = None, start: Optional[datetime.date] = None, end: Optional[datetime.date] = None, skip_rt: bool = True, to_frame=True) -> Dict
      :async:


   .. py:method:: fetch_stock_info(*, market: int = None, to_frame=True) -> Union[List[Dict], pandas.DataFrame]
      :async:


   .. py:method:: fetch_stock_is_margin(*, to_frame=True) -> Union[Set[str], pandas.DataFrame]
      :async:


   .. py:method:: fetch_stock_bar(*, code: str, name: Optional[str] = None, freq: Optional[int] = None, start: Optional[datetime.date] = None, end: Optional[datetime.date] = None, skip_rt: bool = True, to_frame=True) -> Union[Dict, pandas.DataFrame]
      :async:


   .. py:method:: fetch_stock_index(*, index_date: Optional[datetime.date] = None, to_frame=True) -> Union[Dict[str, Dict], pandas.DataFrame]
      :async:


   .. py:method:: fetch_stock_industry(*, to_frame=True) -> Union[List[Dict], pandas.DataFrame]
      :async:


   .. py:method:: fetch_stock_industry_detail(*, code: Optional[str] = None, name: Optional[str] = None, to_frame=True) -> Union[List[Dict], pandas.DataFrame]
      :async:


   .. py:method:: fetch_stock_industry_daily(*, code: str, name: Optional[str] = None, start: Optional[datetime.date] = None, end: Optional[datetime.date] = None, skip_rt: bool = True, to_frame=True) -> Union[Dict, pandas.DataFrame]
      :async:


   .. py:method:: fetch_stock_concept(*, to_frame=True) -> Union[List[Dict], pandas.DataFrame]
      :async:


   .. py:method:: fetch_stock_concept_detail(*, code: Optional[str] = None, name: Optional[str] = None, to_frame=True) -> Union[List[Dict], pandas.DataFrame]
      :async:


   .. py:method:: fetch_stock_concept_daily(*, code: str, name: Optional[str] = None, start: Optional[datetime.date] = None, end: Optional[datetime.date] = None, skip_rt: bool = True, to_frame=True) -> Union[Dict, pandas.DataFrame]
      :async:


   .. py:method:: fetch_stock_yjbb(*, year: int, season: int, to_frame=True) -> Union[List[Dict], pandas.DataFrame]
      :async:


   .. py:method:: fetch_stock_margin(*, code: str, start: Optional[datetime.date] = None, end: Optional[datetime.date] = None, to_frame=True) -> Union[List[Dict], pandas.DataFrame]
      :async:


   .. py:method:: fetch_stock_hot_rank(*, code: Union[str, list], to_frame=True) -> Union[Dict, pandas.DataFrame]
      :async:



.. py:function:: to_std_code(typ: int, code: str) -> str


.. py:class:: BarFreq


   .. py:attribute:: Min1
      :value: 1

      

   .. py:attribute:: Min5
      :value: 5

      

   .. py:attribute:: Min15
      :value: 15

      

   .. py:attribute:: Min30
      :value: 30

      

   .. py:attribute:: Min60
      :value: 60

      

   .. py:attribute:: Daily
      :value: 101

      

   .. py:attribute:: Weekly
      :value: 102

      

   .. py:attribute:: Monthly
      :value: 103

      

   .. py:attribute:: LooseDaily
      :value: 1010

      


.. py:class:: Market


   .. py:attribute:: SZ
      :value: 0

      

   .. py:attribute:: SH
      :value: 1

      

   .. py:attribute:: BJ
      :value: 2

      


.. py:class:: MarketType


   .. py:attribute:: Bond
      :value: 0

      

   .. py:attribute:: Fund
      :value: 1

      

   .. py:attribute:: Stock
      :value: 2

      


.. py:data:: rwq_fetch

   

.. py:data:: fetch_trade_date

   

.. py:data:: fetch_next_trade_date

   

.. py:data:: fetch_prev_trade_date

   

.. py:data:: fetch_is_trade_date

   

.. py:data:: fetch_bond_info

   

.. py:data:: fetch_bond_bar

   

.. py:data:: fetch_fund_info

   

.. py:data:: fetch_fund_net

   

.. py:data:: fetch_fund_bar

   

.. py:data:: fetch_index_info

   

.. py:data:: fetch_index_bar

   

.. py:data:: fetch_stock_info

   

.. py:data:: fetch_stock_is_margin

   

.. py:data:: fetch_stock_bar

   

.. py:data:: fetch_stock_index

   

.. py:data:: fetch_stock_industry

   

.. py:data:: fetch_stock_industry_detail

   

.. py:data:: fetch_stock_industry_daily

   

.. py:data:: fetch_stock_concept

   

.. py:data:: fetch_stock_concept_detail

   

.. py:data:: fetch_stock_concept_daily

   

.. py:data:: fetch_stock_yjbb

   

.. py:data:: fetch_stock_margin

   

.. py:data:: fetch_stock_hot_rank

   

.. py:data:: fetch_rt_quot

   

.. py:data:: rwq_block_fetch

   

.. py:data:: block_fetch_trade_date

   

.. py:data:: block_fetch_next_trade_date

   

.. py:data:: block_fetch_prev_trade_date

   

.. py:data:: block_fetch_is_trade_date

   

.. py:data:: block_fetch_bond_info

   

.. py:data:: block_fetch_bond_bar

   

.. py:data:: block_fetch_fund_info

   

.. py:data:: block_fetch_fund_net

   

.. py:data:: block_fetch_fund_bar

   

.. py:data:: block_fetch_index_info

   

.. py:data:: block_fetch_index_bar

   

.. py:data:: block_fetch_stock_info

   

.. py:data:: block_fetch_stock_is_margin

   

.. py:data:: block_fetch_stock_bar

   

.. py:data:: block_fetch_stock_index

   

.. py:data:: block_fetch_stock_industry

   

.. py:data:: block_fetch_stock_industry_detail

   

.. py:data:: block_fetch_stock_industry_daily

   

.. py:data:: block_fetch_stock_concept

   

.. py:data:: block_fetch_stock_concept_detail

   

.. py:data:: block_fetch_stock_concept_daily

   

.. py:data:: block_fetch_stock_yjbb

   

.. py:data:: block_fetch_stock_margin

   

.. py:data:: block_fetch_stock_hot_rank

   

.. py:data:: block_fetch_rt_quot

   

